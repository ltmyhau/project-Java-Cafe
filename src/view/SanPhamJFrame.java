/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import dao.DBConnect;
import dao.SanPhamDao;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.SanPham;

/**
 *
 * @author Administrator
 */
public class SanPhamJFrame extends javax.swing.JFrame {

    /**
     * Creates new form SanPhamJFrame
     */
    DefaultTableModel model = new DefaultTableModel();
    List<SanPham> listSanPham = new SanPhamDao().getList();
    TableRowSorter<DefaultTableModel> rowSorter = new TableRowSorter<DefaultTableModel>(model);

    public SanPhamJFrame() {
        initComponents();

        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/logo_PL.png")));

        jtbSanPham.getTableHeader().setBackground(new Color(0, 113, 61));
        jtbSanPham.getTableHeader().setForeground(Color.white);
        jtbSanPham.setFont(new Font("Times New Roman", Font.PLAIN, 15));
        jtbSanPham.getTableHeader().setFont(new Font("Times New Roman", Font.BOLD, 17));
        jtbSanPham.getTableHeader().setPreferredSize(new Dimension(100, 35));
        jtbSanPham.setRowHeight(35);

        addPlaceholderStyle(jtfTimKiem);

        layDuLieuTable();
        doLoaiSPComboBox(jcbLocMaLoai);

        sort();

    }

    public void doLoaiSPComboBox(JComboBox jcb) {
        String sql = "select * from LoaiSanPham order by MaLSP";
        try {
            Connection cons = new DBConnect().getConnection();
            PreparedStatement ps = cons.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            DefaultComboBoxModel cbbModel = (DefaultComboBoxModel) jcb.getModel();

            while (rs.next()) {
                jcb.addItem(rs.getString("MaLSP"));
            }

            ps.close();
            rs.close();
            cons.close();

        } catch (Exception e) {
        }
    }

    public void layDuLieuTable() {
        model = (DefaultTableModel) jtbSanPham.getModel();
        model.setRowCount(0);
        for (SanPham o : listSanPham) {
            model.addRow(new Object[]{
                o.getMaSP(),
                o.getTenSP(),
                o.getMaLSP(),
                o.getGiaBan(),
                o.getHinhAnh()});
        }
    }

    public void sort() {
        rowSorter = new TableRowSorter<DefaultTableModel>(model);
        jtbSanPham.setRowSorter(rowSorter);
    }

    public void search() {
        model = (DefaultTableModel) jtbSanPham.getModel();
        rowSorter = new TableRowSorter<>(model);
        jtbSanPham.setRowSorter(rowSorter);
        rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + jtfTimKiem.getText()));
    }

    public void addPlaceholderStyle(JTextField jTextField) {
        Font font = jTextField.getFont();
        font = font.deriveFont(Font.ITALIC);
        jTextField.setFont(font);
        jTextField.setForeground(Color.GRAY);
    }

    public void removePlaceholderStyle(JTextField jTextField) {
        Font font = jTextField.getFont();
        font = font.deriveFont(Font.PLAIN);
        jTextField.setFont(font);
        jTextField.setForeground(Color.BLACK);
    }

    public void locTheoMaLoai(String maLSP) {
        model = (DefaultTableModel) jtbSanPham.getModel();
        rowSorter = new TableRowSorter<>(model);
        jtbSanPham.setRowSorter(rowSorter);
        if (maLSP != "Tất cả") {
            rowSorter.setRowFilter(RowFilter.regexFilter(maLSP));
        } else {
            jtbSanPham.setRowSorter(rowSorter);
        }
    }

    public void locTheoGia(String sql) {
        SanPhamDao sanPhamDao = new SanPhamDao();
        List<SanPham> listSanPham = sanPhamDao.getList(sql);
        model = (DefaultTableModel) jtbSanPham.getModel();
        model.setRowCount(0);
        for (SanPham o : listSanPham) {
            model.addRow(new Object[]{
                o.getMaSP(),
                o.getTenSP(),
                o.getMaLSP(),
                o.getGiaBan(),
                o.getHinhAnh()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlbLoaiSanPham = new javax.swing.JLabel();
        jtfTimKiem = new javax.swing.JTextField();
        jcbLocMaLoai = new javax.swing.JComboBox<>();
        jlbGia = new javax.swing.JLabel();
        jtfGiaDau = new javax.swing.JTextField();
        jtfGiaCuoi = new javax.swing.JTextField();
        jbnLocGia = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jpnViewSanPham = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbSanPham = new javax.swing.JTable();
        jbnXacNhan = new javax.swing.JButton();
        jbnHuy = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jlbLoaiSanPham.setBackground(new java.awt.Color(255, 255, 255));
        jlbLoaiSanPham.setFont(new java.awt.Font("Sitka Text", 1, 29)); // NOI18N
        jlbLoaiSanPham.setForeground(new java.awt.Color(0, 113, 61));
        jlbLoaiSanPham.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbLoaiSanPham.setText("DANH SÁCH SẢN PHẨM");
        jlbLoaiSanPham.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jtfTimKiem.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jtfTimKiem.setText("Tìm kiếm");
        jtfTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfTimKiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfTimKiemFocusLost(evt);
            }
        });
        jtfTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfTimKiemActionPerformed(evt);
            }
        });
        jtfTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfTimKiemKeyReleased(evt);
            }
        });

        jcbLocMaLoai.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jcbLocMaLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        jcbLocMaLoai.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbLocMaLoaiItemStateChanged(evt);
            }
        });

        jlbGia.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        jlbGia.setText("Giá (VNĐ)");

        jtfGiaDau.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N

        jtfGiaCuoi.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N

        jbnLocGia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon_search.png"))); // NOI18N
        jbnLocGia.setBorder(null);
        jbnLocGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbnLocGiaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("-");

        jpnViewSanPham.setBackground(new java.awt.Color(255, 255, 255));

        jtbSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Mã Loại", "Đơn Giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtbSanPham);

        javax.swing.GroupLayout jpnViewSanPhamLayout = new javax.swing.GroupLayout(jpnViewSanPham);
        jpnViewSanPham.setLayout(jpnViewSanPhamLayout);
        jpnViewSanPhamLayout.setHorizontalGroup(
            jpnViewSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jpnViewSanPhamLayout.setVerticalGroup(
            jpnViewSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
        );

        jbnXacNhan.setBackground(new java.awt.Color(157, 205, 239));
        jbnXacNhan.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        jbnXacNhan.setText("Xác Nhận");
        jbnXacNhan.setBorder(null);
        jbnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbnXacNhanActionPerformed(evt);
            }
        });

        jbnHuy.setBackground(new java.awt.Color(157, 205, 239));
        jbnHuy.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        jbnHuy.setText("Hủy");
        jbnHuy.setBorder(null);
        jbnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbnHuyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpnViewSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jlbLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 864, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jtfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jcbLocMaLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(82, 82, 82)
                                .addComponent(jlbGia, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfGiaDau, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtfGiaCuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbnLocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jlbLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbGia, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfGiaDau, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfGiaCuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbnLocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbLocMaLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jpnViewSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfTimKiemActionPerformed

    private void jtfTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTimKiemKeyReleased
        search();
    }//GEN-LAST:event_jtfTimKiemKeyReleased

    private void jbnLocGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbnLocGiaActionPerformed
        if (jtfGiaDau.getText().equalsIgnoreCase("") && jtfGiaCuoi.getText().equalsIgnoreCase("")) {
            String sql = "Select * from SanPham";
            locTheoGia(sql);
        } else {
            float giaDau = Float.parseFloat(jtfGiaDau.getText());
            float giaCuoi = Float.parseFloat(jtfGiaCuoi.getText());
            String sql = "Select * from SanPham where GiaBan between " + giaDau + " and " + giaCuoi;
            locTheoGia(sql);
        }
    }//GEN-LAST:event_jbnLocGiaActionPerformed

    private void jcbLocMaLoaiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbLocMaLoaiItemStateChanged
        String maLSP = jcbLocMaLoai.getSelectedItem().toString();
        locTheoMaLoai(maLSP);
    }//GEN-LAST:event_jcbLocMaLoaiItemStateChanged

    private void jbnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbnXacNhanActionPerformed
        int row = jtbSanPham.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm");
        } else {
            String maSP = jtbSanPham.getValueAt(row, 0).toString();
            String sql = "select * from SanPham where MaSP = '" + maSP + "'";
            try {
                Connection cons = new DBConnect().getConnection();
                PreparedStatement ps = cons.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                SanPham sanPham = new SanPham();
                while (rs.next()) {
                    sanPham.setMaSP(rs.getString("MaSP"));
                    sanPham.setTenSP(rs.getString("TenSP"));
                    sanPham.setMaLSP(rs.getString("MaLSP"));
                    sanPham.setGiaBan(rs.getFloat("GiaBan"));
                    sanPham.setHinhAnh(rs.getBytes("HinhAnh"));
                }
                ps.close();
                rs.close();
                cons.close();

                BanHangJPanel.hienThongTin(sanPham);
                HoaDonJPanel.hienThongTinSanPham(sanPham);

            } catch (Exception e) {
            }
            dispose();
        }
    }//GEN-LAST:event_jbnXacNhanActionPerformed

    private void jbnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbnHuyActionPerformed
        dispose();
    }//GEN-LAST:event_jbnHuyActionPerformed

    private void jtfTimKiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfTimKiemFocusGained
        if (jtfTimKiem.getText().equals("Tìm kiếm")) {
            jtfTimKiem.setText(null);
            jtfTimKiem.requestFocus();
            removePlaceholderStyle(jtfTimKiem);
        }
    }//GEN-LAST:event_jtfTimKiemFocusGained

    private void jtfTimKiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfTimKiemFocusLost
        if (jtfTimKiem.getText().length() == 0) {
            addPlaceholderStyle(jtfTimKiem);
            jtfTimKiem.setText("Tìm kiếm");
        }
    }//GEN-LAST:event_jtfTimKiemFocusLost

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        this.requestFocusInWindow();
    }//GEN-LAST:event_formWindowGainedFocus

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbnHuy;
    private javax.swing.JButton jbnLocGia;
    private javax.swing.JButton jbnXacNhan;
    private javax.swing.JComboBox<String> jcbLocMaLoai;
    private javax.swing.JLabel jlbGia;
    private javax.swing.JLabel jlbLoaiSanPham;
    private javax.swing.JPanel jpnViewSanPham;
    private javax.swing.JTable jtbSanPham;
    private javax.swing.JTextField jtfGiaCuoi;
    private javax.swing.JTextField jtfGiaDau;
    private javax.swing.JTextField jtfTimKiem;
    // End of variables declaration//GEN-END:variables
}
